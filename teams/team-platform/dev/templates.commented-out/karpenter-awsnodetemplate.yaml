{{ if .Values.spec.karpenterInstanceProfile }}
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: karpenter-bottlerocket
  labels:
    {{- toYaml .Values.labels | nindent 4 }}
spec:
  amiFamily: Bottlerocket
  instanceProfile: '{{ .Values.spec.karpenterInstanceProfile }}'
  subnetSelector:
    kubernetes.io/cluster/{{ .Values.spec.clusterName }}: '*'
    #aws:cloudformation:stack-name: '{{ .Values.spec.clusterName }}' # If created with CDK
    kubernetes.io/role/internal-elb: '1' # to select only private subnets
  securityGroupSelector:
    karpenter.sh/discovery: '{{ .Values.spec.clusterName }}'
    #aws:eks:cluster-name: '{{ .Values.spec.clusterName }}' # Choose only security groups of nodes
  userData: |
    [settings.kubernetes]
    kube-api-qps = 30
    [settings.kubernetes.eviction-hard]
    "memory.available" = "20%"
  # amiSelector:
  #   karpenter.sh/discovery: my-cluster
  tags:
    karpenter.sh/cluster_name: {{.Values.spec.clusterName}}
    karpenter.sh/provisioner: burnham
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2 # 1 For harden securituy on ImDSv2; if 1 it breaks cloudWatch Metrics who cannot get instance ID
    httpTokens: required
---
apiVersion: karpenter.k8s.aws/v1alpha1
kind: AWSNodeTemplate
metadata:
  name: karpenter-default
  labels:
    {{- toYaml .Values.labels | nindent 4 }}  
spec:
  instanceProfile: '{{ .Values.spec.karpenterInstanceProfile }}'
  subnetSelector:
    kubernetes.io/cluster/{{ .Values.spec.clusterName }}: '*'
    kubernetes.io/role/internal-elb: '1' # to select only private subnets
  securityGroupSelector:
    karpenter.sh/discovery: '{{ .Values.spec.clusterName }}'
    #aws:eks:cluster-name: '{{ .Values.spec.clusterName }}' # Choose only security groups of nodes
  tags:
    karpenter.sh/cluster_name: {{.Values.spec.clusterName}}
    karpenter.sh/provisioner: default
  metadataOptions:
    httpEndpoint: enabled
    httpProtocolIPv6: disabled
    httpPutResponseHopLimit: 2 # https://aws.github.io/aws-eks-best-practices/security/docs/iam/#when-your-application-needs-access-to-imds-use-imdsv2-and-increase-the-hop-limit-on-ec2-instances-to-2
    httpTokens: required
{{ end }}
